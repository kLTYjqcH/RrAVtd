let Operation,esprima,escodegen,esmangle;_34e‍.x([["default",()=>_34e‍.o]]);_34e‍.w("../Operation.mjs",[["default",["Operation"],function(v){Operation=v}]]);_34e‍.w("esprima",[["*",null,function(v){esprima=v}]]);_34e‍.w("escodegen",[["default",["escodegen"],function(v){escodegen=v}]]);_34e‍.w("esmangle",[["default",["esmangle"],function(v){esmangle=v}]]);/**
 * @author n1474335 [n1474335@gmail.com]
 * @copyright Crown Copyright 2016
 * @license Apache-2.0
 */






/**
 * JavaScript Minify operation
 */
class JavaScriptMinify extends Operation {

    /**
     * JavaScriptMinify constructor
     */
    constructor() {
        super();

        this.name = "JavaScript Minify";
        this.module = "Code";
        this.description = "Compresses JavaScript code.";
        this.inputType = "string";
        this.outputType = "string";
        this.args = [];
    }

    /**
     * @param {string} input
     * @param {Object[]} args
     * @returns {string}
     */
    run(input, args) {
        let result = "";
        const AST = esprima.parseScript(input),
            optimisedAST = esmangle.optimize(AST, null),
            mangledAST = esmangle.mangle(optimisedAST);

        result = escodegen.generate(mangledAST, {
            format: {
                renumber:    true,
                hexadecimal: true,
                escapeless:  true,
                compact:     true,
                semicolons:  false,
                parentheses: false
            }
        });
        return result;
    }

}

_34e‍.d(JavaScriptMinify);
